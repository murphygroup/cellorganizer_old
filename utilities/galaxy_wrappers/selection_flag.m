function answer = selection_flag(dimensionality, component, mclass, mtype)
% Ensure dimensionality,class,type conbine to a valid matching.

% Chinasa Okolo (chinasa.okolo@pomona.edu)
%
% Copyright (C) 2018 Murphy Lab
% Computational Biology Department
% Carnegie Mellon University
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published
% by the Free Software Foundation; either version 2 of the License,
% or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
% General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
% 02110-1301, USA.
%
% For additional information visit http://murphylab.web.cmu.edu or
% send email to murphy@cmu.edu
%
% Feb 17, 2018 X. Ruan add code for 2D PCA model
% Sep 14, 2018 X. Ruan add code for 3D SPHARM-RPDM model

if (    strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'vesicle' ) && ...
        strcmpi( mtype, 'gmm' ) && ...
        strcmpi( component, 'protein' ) ) || ...
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'nuclear_membrane' ) && ...
        strcmpi( mtype, 'medial_axis' ) && ...
        strcmpi( component, 'nucleus' ) ) || ...
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'cell_membrane' ) && ...
        strcmpi( mtype, 'ratio' )  && ...
        strcmpi( component, 'cell' )) || ...
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'framework' ) && ...
        strcmpi( mtype, 'pca' )  && ...
        (strcmpi( component, 'nucleus' ) || strcmpi( component, 'cell' ))) || ...        
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'framework' ) && ...
        strcmpi( mtype, 'diffeomorphic' )  && ...
        (strcmpi( component, 'nucleus' ) || strcmpi( component, 'cell' ))) || ...
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'nuclear_membrane' ) && ...
        strcmpi( mtype, 'diffeomorphic' )  && ...
        strcmpi( component, 'nucleus' )) || ...
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'cell_membrane' ) && ...
        strcmpi( mtype, 'diffeomorphic' )  && ...
        strcmpi( component, 'cell' )) || ...
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'cell_membrane' ) && ...
        strcmpi( mtype, 'pca' )  && ...
        strcmpi( component, 'cell' )) || ...
        (strcmpi( dimensionality, '2D' ) && ...
        strcmpi( mclass, 'nuclear_membrane' ) && ...
        strcmpi( mtype, 'pca' )  && ...
        strcmpi( component, 'nucleus' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'nuclear_membrane' ) && ...
        strcmpi( mtype, 'diffeomorphic' )  && ...
        strcmpi( component, 'nucleus' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'cell_membrane' ) && ...
        strcmpi( mtype, 'diffeomorphic' )  && ...
        strcmpi( component, 'cell' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'vesicle' ) && ...
        strcmpi( mtype, 'gmm' ) && ...
        strcmpi( component, 'protein' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'nuclear_membrane' ) && ...
        strcmpi( mtype, 'cylindrical_surface' ) && ...
        strcmpi( component, 'nucleus' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'cell_membrane' ) && ...
        strcmpi( mtype, 'ratio' ) && ...
        strcmpi( component, 'cell' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'framework' ) && ...
        strcmpi( mtype, 'diffeomorphic' ) && ...
        (strcmpi( component, 'nucleus' ) || strcmpi( component, 'cell' ))) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'network' ) && ...
        strcmpi( mtype, 'microtubule_growth' ) && ...
        strcmpi( component, 'protein' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'protein_distribution' ) && ...
        strcmpi( mtype, 'morphing' ) && ...
        strcmpi( component, 'cell' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'standardized_voxels' ) && ...
        strcmpi( mtype, 'standardized_map_half-ellipsoid' ) && ...
        strcmpi( component, 'protein' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'standardized_voxels' ) && ...
        strcmpi( mtype, 'standardized_map_half-ellipsoid' ) && ...
        strcmpi( component, 'protein' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'cell_membrane' ) && ...
        strcmpi( mtype, 'spharm_rpdm' ) && ...
        strcmpi( component, 'cell' )) || ...
        (strcmpi( dimensionality, '3D' ) && ...
        strcmpi( mclass, 'nuclear_membrane' ) && ...
        strcmpi( mtype, 'spharm_rpdm' ) && ...
        strcmpi( component, 'nucleus' ))
    answer = true;
else
    try
        warning(['Wrong combination of model class/type: ' mclass ', ' mtype ' for ' component]);
    catch
        warning('Wrong combination of model class/type');
    end
    
    answer = false;
end
